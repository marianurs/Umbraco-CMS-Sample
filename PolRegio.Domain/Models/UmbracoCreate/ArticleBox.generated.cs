//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.4.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace PolRegio.Domain.Models.UmbracoCreate
{
	// Mixin content Type 1305 with alias "articleBox"
	/// <summary>Box</summary>
	public partial interface IArticleBox : IPublishedContent
	{
		/// <summary>Data artykułu</summary>
		DateTime ListArticleDate { get; }

		/// <summary>Tytuł artykułu na liście</summary>
		string ListArticleTitle { get; }

		/// <summary>Zdjęcie na liście</summary>
		string ListImage { get; }

		/// <summary>Krótki opis artykułu na liście</summary>
		IHtmlString ListShortDescArticle { get; }
	}

	/// <summary>Box</summary>
	[PublishedContentModel("articleBox")]
	public partial class ArticleBox : PublishedContentModel, IArticleBox
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "articleBox";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ArticleBox(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ArticleBox, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Data artykułu: Wybierz datę
		///</summary>
		[ImplementPropertyType("listArticleDate")]
		public DateTime ListArticleDate
		{
			get { return GetListArticleDate(this); }
		}

		/// <summary>Static getter for Data artykułu</summary>
		public static DateTime GetListArticleDate(IArticleBox that) { return that.GetPropertyValue<DateTime>("listArticleDate"); }

		///<summary>
		/// Tytuł artykułu na liście: Dodaj tytuł artykułu
		///</summary>
		[ImplementPropertyType("listArticleTitle")]
		public string ListArticleTitle
		{
			get { return GetListArticleTitle(this); }
		}

		/// <summary>Static getter for Tytuł artykułu na liście</summary>
		public static string GetListArticleTitle(IArticleBox that) { return that.GetPropertyValue<string>("listArticleTitle"); }

		///<summary>
		/// Zdjęcie na liście: Dodaj zdjęcie
		///</summary>
		[ImplementPropertyType("listImage")]
		public string ListImage
		{
			get { return GetListImage(this); }
		}

		/// <summary>Static getter for Zdjęcie na liście</summary>
		public static string GetListImage(IArticleBox that) { return that.GetPropertyValue<string>("listImage"); }

		///<summary>
		/// Krótki opis artykułu na liście: Dodaj krótki opis artykułu
		///</summary>
		[ImplementPropertyType("listShortDescArticle")]
		public IHtmlString ListShortDescArticle
		{
			get { return GetListShortDescArticle(this); }
		}

		/// <summary>Static getter for Krótki opis artykułu na liście</summary>
		public static IHtmlString GetListShortDescArticle(IArticleBox that) { return that.GetPropertyValue<IHtmlString>("listShortDescArticle"); }
	}
}
