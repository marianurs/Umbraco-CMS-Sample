//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.4.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace PolRegio.Domain.Models.UmbracoCreate
{
	// Mixin content Type 8416 with alias "umbracoSalesManagoArticleNotify"
	/// <summary>SalesManago Powiadomienie email</summary>
	public partial interface IUmbracoSalesManagoArticleNotify : IPublishedContent
	{
		/// <summary>Komentarz</summary>
		string UmbracoSalesManagoArticleNotifyComment { get; }

		/// <summary>Maile</summary>
		string UmbracoSalesManagoArticleNotifyNotificationEmails { get; }

		/// <summary>Przekaż do wysyłki.</summary>
		bool UmbracoSalesManagoArticleNotifyShouldSend { get; }
	}

	/// <summary>SalesManago Powiadomienie email</summary>
	[PublishedContentModel("umbracoSalesManagoArticleNotify")]
	public partial class UmbracoSalesManagoArticleNotify : PublishedContentModel, IUmbracoSalesManagoArticleNotify
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbracoSalesManagoArticleNotify";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbracoSalesManagoArticleNotify(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbracoSalesManagoArticleNotify, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Komentarz: Komentarz do edycji, który zostanie dołączony do wiadomości email.
		///</summary>
		[ImplementPropertyType("umbracoSalesManagoArticleNotifyComment")]
		public string UmbracoSalesManagoArticleNotifyComment
		{
			get { return GetUmbracoSalesManagoArticleNotifyComment(this); }
		}

		/// <summary>Static getter for Komentarz</summary>
		public static string GetUmbracoSalesManagoArticleNotifyComment(IUmbracoSalesManagoArticleNotify that) { return that.GetPropertyValue<string>("umbracoSalesManagoArticleNotifyComment"); }

		///<summary>
		/// Maile: Lista maili na które wysyłane będą notyfikacje o zmianach lub dodaniu nowego artykułu.
		///</summary>
		[ImplementPropertyType("umbracoSalesManagoArticleNotifyNotificationEmails")]
		public string UmbracoSalesManagoArticleNotifyNotificationEmails
		{
			get { return GetUmbracoSalesManagoArticleNotifyNotificationEmails(this); }
		}

		/// <summary>Static getter for Maile</summary>
		public static string GetUmbracoSalesManagoArticleNotifyNotificationEmails(IUmbracoSalesManagoArticleNotify that) { return that.GetPropertyValue<string>("umbracoSalesManagoArticleNotifyNotificationEmails"); }

		///<summary>
		/// Przekaż do wysyłki.: Czy po opublikowaniu / zaktualizowaniu artykuł ma zostać wysłany do SalesManago?
		///</summary>
		[ImplementPropertyType("umbracoSalesManagoArticleNotifyShouldSend")]
		public bool UmbracoSalesManagoArticleNotifyShouldSend
		{
			get { return GetUmbracoSalesManagoArticleNotifyShouldSend(this); }
		}

		/// <summary>Static getter for Przekaż do wysyłki.</summary>
		public static bool GetUmbracoSalesManagoArticleNotifyShouldSend(IUmbracoSalesManagoArticleNotify that) { return that.GetPropertyValue<bool>("umbracoSalesManagoArticleNotifyShouldSend"); }
	}
}
