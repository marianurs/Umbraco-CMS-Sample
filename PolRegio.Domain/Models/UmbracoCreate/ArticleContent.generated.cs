//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.4.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace PolRegio.Domain.Models.UmbracoCreate
{
	// Mixin content Type 1307 with alias "articleContent"
	/// <summary>MainArticleData</summary>
	public partial interface IArticleContent : IPublishedContent
	{
		/// <summary>Dodaj dokument</summary>
		Archetype.Models.ArchetypeModel AddDocumentDown { get; }

		/// <summary>Dodaj zdjęcie</summary>
		Archetype.Models.ArchetypeModel ArticleImageList { get; }

		/// <summary>Tag do artykulu</summary>
		object ArticleTag { get; }

		/// <summary>Tekst artykułu</summary>
		IHtmlString ArticleText { get; }

		/// <summary>Tytuł artykułu</summary>
		string ArticleTitle { get; }

		/// <summary>Zobacz wszystkie</summary>
		bool SeeAllArticles { get; }

		/// <summary>Social share</summary>
		bool SocialShare { get; }
	}

	/// <summary>MainArticleData</summary>
	[PublishedContentModel("articleContent")]
	public partial class ArticleContent : PublishedContentModel, IArticleContent
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "articleContent";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ArticleContent(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ArticleContent, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Dodaj dokument: Dodaj dokument do pobrania
		///</summary>
		[ImplementPropertyType("addDocumentDown")]
		public Archetype.Models.ArchetypeModel AddDocumentDown
		{
			get { return GetAddDocumentDown(this); }
		}

		/// <summary>Static getter for Dodaj dokument</summary>
		public static Archetype.Models.ArchetypeModel GetAddDocumentDown(IArticleContent that) { return that.GetPropertyValue<Archetype.Models.ArchetypeModel>("addDocumentDown"); }

		///<summary>
		/// Dodaj zdjęcie: Dodaj zdjęcie do carousel
		///</summary>
		[ImplementPropertyType("articleImageList")]
		public Archetype.Models.ArchetypeModel ArticleImageList
		{
			get { return GetArticleImageList(this); }
		}

		/// <summary>Static getter for Dodaj zdjęcie</summary>
		public static Archetype.Models.ArchetypeModel GetArticleImageList(IArticleContent that) { return that.GetPropertyValue<Archetype.Models.ArchetypeModel>("articleImageList"); }

		///<summary>
		/// Tag do artykulu: Dodaj tag do artykułu
		///</summary>
		[ImplementPropertyType("articleTag")]
		public object ArticleTag
		{
			get { return GetArticleTag(this); }
		}

		/// <summary>Static getter for Tag do artykulu</summary>
		public static object GetArticleTag(IArticleContent that) { return that.GetPropertyValue("articleTag"); }

		///<summary>
		/// Tekst artykułu: Wprowadź treść artykułu
		///</summary>
		[ImplementPropertyType("articleText")]
		public IHtmlString ArticleText
		{
			get { return GetArticleText(this); }
		}

		/// <summary>Static getter for Tekst artykułu</summary>
		public static IHtmlString GetArticleText(IArticleContent that) { return that.GetPropertyValue<IHtmlString>("articleText"); }

		///<summary>
		/// Tytuł artykułu: Wprowadź tytuł artykułu
		///</summary>
		[ImplementPropertyType("articleTitle")]
		public string ArticleTitle
		{
			get { return GetArticleTitle(this); }
		}

		/// <summary>Static getter for Tytuł artykułu</summary>
		public static string GetArticleTitle(IArticleContent that) { return that.GetPropertyValue<string>("articleTitle"); }

		///<summary>
		/// Zobacz wszystkie: Czy ma być pokazany link do strony ze wszystkimi artykułami
		///</summary>
		[ImplementPropertyType("seeAllArticles")]
		public bool SeeAllArticles
		{
			get { return GetSeeAllArticles(this); }
		}

		/// <summary>Static getter for Zobacz wszystkie</summary>
		public static bool GetSeeAllArticles(IArticleContent that) { return that.GetPropertyValue<bool>("seeAllArticles"); }

		///<summary>
		/// Social share: Czy mają być pokazane przyciski do share'owania kontentu
		///</summary>
		[ImplementPropertyType("socialShare")]
		public bool SocialShare
		{
			get { return GetSocialShare(this); }
		}

		/// <summary>Static getter for Social share</summary>
		public static bool GetSocialShare(IArticleContent that) { return that.GetPropertyValue<bool>("socialShare"); }
	}
}
